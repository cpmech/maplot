// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Plotter default render works 1`] = `
CanvasRenderingContext2D {
  "_canvas": <canvas />,
  "_directionStack": Array [
    "inherit",
    "inherit",
  ],
  "_drawCalls": Array [
    Object {
      "props": Object {
        "height": 0,
        "width": 0,
        "x": 0,
        "y": 0,
      },
      "transform": Array [
        1,
        0,
        0,
        1,
        0,
        0,
      ],
      "type": "fillRect",
    },
  ],
  "_events": Array [
    Object {
      "props": Object {},
      "transform": Array [
        1,
        0,
        0,
        1,
        0,
        0,
      ],
      "type": "save",
    },
    Object {
      "props": Object {
        "x": 0,
        "y": 0,
      },
      "transform": Array [
        1,
        0,
        0,
        1,
        0,
        0,
      ],
      "type": "translate",
    },
    Object {
      "props": Object {
        "value": 1,
      },
      "transform": Array [
        1,
        0,
        0,
        1,
        0,
        0,
      ],
      "type": "globalAlpha",
    },
    Object {
      "props": Object {
        "value": "#fff",
      },
      "transform": Array [
        1,
        0,
        0,
        1,
        0,
        0,
      ],
      "type": "fillStyle",
    },
    Object {
      "props": Object {
        "height": 0,
        "width": 0,
        "x": 0,
        "y": 0,
      },
      "transform": Array [
        1,
        0,
        0,
        1,
        0,
        0,
      ],
      "type": "fillRect",
    },
  ],
  "_fillStyleStack": Array [
    "#000",
    "#fff",
  ],
  "_filterStack": Array [
    "none",
    "none",
  ],
  "_fontStack": Array [
    "10px sans-serif",
    "10px sans-serif",
  ],
  "_globalAlphaStack": Array [
    1,
    1,
  ],
  "_globalCompositeOperationStack": Array [
    "source-over",
    "source-over",
  ],
  "_imageSmoothingEnabledStack": Array [
    true,
    true,
  ],
  "_imageSmoothingQualityStack": Array [
    "low",
    "low",
  ],
  "_lineCapStack": Array [
    "butt",
    "butt",
  ],
  "_lineDashOffsetStack": Array [
    0,
    0,
  ],
  "_lineDashStack": Array [
    Array [],
    Array [],
  ],
  "_lineJoinStack": Array [
    "miter",
    "miter",
  ],
  "_lineWidthStack": Array [
    1,
    undefined,
  ],
  "_miterLimitStack": Array [
    10,
    10,
  ],
  "_path": Array [
    Object {
      "props": Object {},
      "transform": Array [
        1,
        0,
        0,
        1,
        0,
        0,
      ],
      "type": "beginPath",
    },
  ],
  "_shadowBlurStack": Array [
    0,
    0,
  ],
  "_shadowColorStack": Array [
    "rgba(0, 0, 0, 0)",
    "rgba(0, 0, 0, 0)",
  ],
  "_shadowOffsetXStack": Array [
    0,
    0,
  ],
  "_shadowOffsetYStack": Array [
    0,
    0,
  ],
  "_stackIndex": 1,
  "_strokeStyleStack": Array [
    "#000",
    "#000",
  ],
  "_textAlignStack": Array [
    "start",
    "start",
  ],
  "_textBaselineStack": Array [
    "alphabetic",
    "alphabetic",
  ],
  "_transformStack": Array [
    Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
    Array [
      1,
      0,
      0,
      1,
      0,
      0,
    ],
  ],
  "addHitRegion": [MockFunction],
  "arc": [MockFunction],
  "arcTo": [MockFunction],
  "beginPath": [MockFunction],
  "bezierCurveTo": [MockFunction],
  "clearHitRegions": [MockFunction],
  "clearRect": [MockFunction],
  "clip": [MockFunction],
  "closePath": [MockFunction],
  "createImageData": [MockFunction],
  "createLinearGradient": [MockFunction],
  "createPattern": [MockFunction],
  "createRadialGradient": [MockFunction],
  "drawFocusIfNeeded": [MockFunction],
  "drawImage": [MockFunction],
  "ellipse": [MockFunction],
  "fill": [MockFunction],
  "fillRect": [MockFunction] {
    "calls": Array [
      Array [
        0,
        0,
        0,
        0,
      ],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": undefined,
      },
    ],
  },
  "fillText": [MockFunction],
  "getImageData": [MockFunction],
  "getLineDash": [MockFunction],
  "getTransform": [MockFunction],
  "isPointInPath": [MockFunction],
  "isPointInStroke": [MockFunction],
  "lineTo": [MockFunction],
  "measureText": [MockFunction],
  "moveTo": [MockFunction],
  "putImageData": [MockFunction],
  "quadraticCurveTo": [MockFunction],
  "rect": [MockFunction],
  "removeHitRegion": [MockFunction],
  "resetTransform": [MockFunction],
  "restore": [MockFunction],
  "rotate": [MockFunction],
  "save": [MockFunction] {
    "calls": Array [
      Array [],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": undefined,
      },
    ],
  },
  "scale": [MockFunction],
  "scrollPathIntoView": [MockFunction],
  "setLineDash": [MockFunction],
  "setTransform": [MockFunction],
  "stroke": [MockFunction],
  "strokeRect": [MockFunction],
  "strokeText": [MockFunction],
  "transform": [MockFunction],
  "translate": [MockFunction] {
    "calls": Array [
      Array [
        0,
        0,
      ],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": undefined,
      },
    ],
  },
}
`;
